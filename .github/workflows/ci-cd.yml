name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  NODE_ENV: production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --include=dev

      - name: Install NestJS CLI
        run: npm install -g @nestjs/cli

      - name: Build application
        run: nest build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.VM_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy to VM
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          AZURE_USER: ${{ secrets.AZURE_USER }}
        run: |
          echo "Deploying to $VM_HOST..."
          scp -r dist package*.json $AZURE_USER@$VM_HOST:~/
          ssh $AZURE_USER@$VM_HOST "cd ~/nest-app && npm install --omit=dev && pm2 start dist/main.js --name nest-app --update-env || pm2 restart nest-app"
